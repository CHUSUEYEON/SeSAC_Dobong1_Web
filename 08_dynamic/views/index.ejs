<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>동적폼 전송</title>
    <!-- jQuery CDN > ajax 사용 -->
    <script
      src="https://code.jquery.com/jquery-3.7.1.min.js"
      integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo="
      crossorigin="anonymous"
    ></script>

    <!-- axios CDN -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <style>
      body {
        background-color: palevioletred;
      }

      .result {
        font-size: 1.5rem;
        font-weight: 700px;
      }
    </style>
  </head>
  <body>
    <h1>동적폼 연습하기</h1>
    <!-- 이름, 성별 입력받는 폼 -->
    <form name="register">
      <input
        type="text"
        name="name"
        required
        placeholder="이름을 입력해주세요."
      />
      <br />
      성별을
      <input type="radio" name="gender" id="male" value="남자" required />
      <label for="male">남성</label>
      <input type="radio" name="gender" id="female" value="여자" required />
      <label for="female">여성</label>
      <br />
      <br />

      <button type="button" onclick="ajaxGet()">Ajax Get 제출</button>
      <button type="button" onclick="ajaxPost()">Ajax Post 제출</button>
      <br />
      <button type="button" onclick="axiosGet()">axios Get 제출</button>
      <button type="button" onclick="axiosPost()">axios Post 제출</button>
      <br />
      <button type="button" onclick="fetchGet()">fetch Get 제출</button>
      <button type="button" onclick="fetchPost()">fetch Post 제출</button>
      <br />

      <!-- 동적폼 전송 결과를 보여줄 곳 -->
      <div class="result"></div>

      <a href="/open-api">open api 사용해보기</a>
    </form>
    <script>
      const resultBox = document.querySelector(".result");
      function ajaxGet() {
        const form = document.forms["register"];
        console.log(form);
        console.log(form.name);
        console.log(form.gender); // >> 배열 형태 (젠더를 두 개에 줬기 때문)
        console.log(form.male);

        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };

        $.ajax({
          type: "get",
          url: "/aja",
          data: data,
          success: function (res) {
            //send에 대한 데이터가 여기 담김
            console.log(res);
            resultBox.textContent = `GET ajax 요청 완료!:${res.name}님의 성별은 ${res.gender}입니다.`;
            resultBox.style.color = "red";
          },
          error: function (err) {
            console.log("ajax 실패");
          },
        });
      }
      function ajaxPost() {
        const form = document.forms["register"];
        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };

        $.ajax({
          type: "post",
          url: "/ajax",
          data: data,
          success: function (res) {
            console.log(res);
            resultBox.textContent = `GET ajax 요청 완료!:${res.name}님의 성별은 ${res.gender}입니다.`;
            resultBox.style.color = "orange";
          },
        });
      }

      //   axios
      async function axiosGet() {
        const form = document.forms["register"];
        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };

        // type buttom의 유효성 검사: checkValidity()
        // required 표시된 부분이 있으면 기입이 됐는지 안됐는지 검사
        // - required가 있는 항목에 대해서
        //   -기입했다면 true, 기입하지 않았다면 false 반환
        // - required가 없는 항목에 대해서 : 무조건 true 반환

        console.log(form.name.checkValidity());
        console.log(form.gender[0].checkValidity());
        console.log(form.gender[1].checkValidity());

        if (!form.name.checkValidity()) {
          resultBox.textContent = "이름을 입력해주세요.";
          //   resultBox.textContent = form.name.validationMessage; //이 필드를 채우십시오.(기본 제공 메시지)
        } else if (!form.gender[0].checkValidity()) {
          //   resultBox.textContent = form.gender[0].validationMessage; //다음 옵션 중 하나를 선택해주세요.
          resultBox.textContent = "성별을 선택해주세요.";
        } else {
          // 모든 값 채웠을 떄 axios 요청!
          //   axios({
          //     method: "GET",
          //     url: "/axios",
          //     params: data, //get일 때는 params로 데이터 전달
          //   }).then(function (res) {
          //     console.log(res);
          //     console.log(res.data); //res.send가 준 값(내가 제일 많이 쓸..!!)
          //     console.log(res.status);
          //     console.log(res.statusText);
          //     console.log(res.headers);
          //     const { name, gender } = res.data; //구조 분해 할당
          //     // const { name, gender } = { name: "이름", gender: "성" };
          //     resultBox.innerText = `GET axios 요청 완료!:${name}님의 성별은 ${gender}입니다.`;
          //     resultBox.style.color = "green";
          //   });
          try {
            const response = await axios({
              method: "GET",
              url: `/axios?name=${data.name}&gender=${data.gender}`,
              //   params: data, //get일 때는 params로 데이터 전달
            });
            console.log(response.data);
            const { name, gender } = { name: "이름", gender: "성" };
            resultBox.innerText = `GET axios 요청 완료!:${name}님의 성별은 ${gender}입니다.`;
            resultBox.style.color = "green";
          } catch (err) {
            console.log("err!!", err);
          }
        }
      }
      async function axiosPost() {
        const form = document.forms["register"];
        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };

        try {
          const response = await axios({
            method: "post",
            url: "/axios",
            data: data,
          });
          console.log(response.data);
          const { name: 이름, gender: 성 } = response.data;
          resultBox.style.color = "blue";
          resultBox.innerText = `POST axios 요청 완료!: ${이름}님의 성별은 ${성}입니다.`;
        } catch (err) {
          console.log(err);
        }
      }

      function fetchGet() {
        const form = document.forms["register"];
        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };

        // fetch(url, {요청과 관련된 데이터})
        // fetch(`/fetch?name=${data.name}&gender=${data.gender}`, {
        //   method: "get",
        // })

        fetch(`/fetch?name=${data.name}&gender=${data.gender}`, {
          method: "get",
        })
          .then(function (response) {
            // response: HTTP 응답 전체를 나타내는 객체,
            // 본문 콘텐트를 추출하기 위해서 사용하는 메서드: json(), text()
            console.log(response);
            return response.json(); //app.js에서 객체로 보낼 경우(res.send({msg:hihi} or res.send(req.query))
            // return response.text();  //app.js에서 문자로 보낼 경우(res.send('hihihihi')
            //반드시 리턴을 해야 다음 덴으로 넘어간다. 안 보임
          })
          .then(function (result) {
            console.log("++++++++++++");
            console.log(result);
            resultBox.style.color = "coral";
            resultBox.innerText = `Get fetch 요청 완료!: ${result.name}님의 성별은 ${result.gender}입니다.`;
          });
      }

      async function fetchPost() {
        const form = document.forms["register"];
        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };

        try {
          const res = await fetch("./fetch", {
            method: "post",
            headers: {
              "Content-Type": "application/json",
            },
            //data를 post 요청으로 보낼 때는
            // object -> JSON으로 변경해서 보냄(바디라는 공간에 담아서)
            body: JSON.stringify(data),
          });
          console.log(res);

          const result = await res.json();
          console.log(result);
          resultBox.style.color = "lime";
          resultBox.innerText = `Post fetch 요청 완료!: ${result.name}님의 성별은 ${result.gender}입니다.`;
        } catch (err) {
          console.log("err!", err);
        }
      }
    </script>
  </body>
</html>
